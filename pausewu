function PauseWindowsUpdate {
    Write-Host " + Menerapkan pengaturan Windows Pause Update..." -ForegroundColor Yellow

    # CacheSet001
    $base1 = "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UpdatePolicy\GPCache\CacheSet001\WindowsUpdate"
    $au1 = "$base1\AU"
    New-Item -Path $base1 -Force | Out-Null
    New-Item -Path $au1 -Force | Out-Null

    Set-ItemProperty -Path $base1 -Name "ExcludeWUDriversInQualityUpdate" -Value 1 -Type DWord
    Set-ItemProperty -Path $base1 -Name "AllowAutoWindowsUpdateDownloadOverMeteredNetwork" -Value 0 -Type DWord
    Set-ItemProperty -Path $base1 -Name "ManagePreviewBuildsPolicyValue" -Value 0 -Type DWord
    Set-ItemProperty -Path $base1 -Name "AUPowerManagement" -Value 0 -Type DWord
    Set-ItemProperty -Path $base1 -Name "ElevateNonAdmins" -Value 0 -Type DWord
    Set-ItemProperty -Path $base1 -Name "SetAllowOptionalContent" -Value 0 -Type DWord
    Set-ItemProperty -Path $base1 -Name "SetAutoRestartNotificationDisable" -Value 1 -Type DWord
    Set-ItemProperty -Path $base1 -Name "AllowOptionalContent" -Value 0 -Type DWord
    Set-ItemProperty -Path $base1 -Name "DisableWUfBSafeguards" -Value 0 -Type DWord
    Set-ItemProperty -Path $base1 -Name "SetUpdateNotificationLevel" -Value 1 -Type DWord
    Set-ItemProperty -Path $base1 -Name "UpdateNotificationLevel" -Value 2 -Type DWord
    Set-ItemProperty -Path $base1 -Name "SetRestartWarningSchd" -Value 0 -Type DWord

    Set-ItemProperty -Path $au1 -Name "NoAUAsDefaultShutdownOption" -Value 1 -Type DWord
    Set-ItemProperty -Path $au1 -Name "NoAUShutdownOption" -Value 1 -Type DWord
    Set-ItemProperty -Path $au1 -Name "AlwaysAutoRebootAtScheduledTime" -Value 0 -Type DWord
    Set-ItemProperty -Path $au1 -Name "AutoInstallMinorUpdates" -Value 0 -Type DWord
    Set-ItemProperty -Path $au1 -Name "NoAutoRebootWithLoggedOnUsers" -Value 1 -Type DWord
    Set-ItemProperty -Path $au1 -Name "NoAutoUpdate" -Value 1 -Type DWord
    Set-ItemProperty -Path $au1 -Name "AUOptions" -Value 1 -Type DWord
    Set-ItemProperty -Path $au1 -Name "AutomaticMaintenanceEnabled" -Value 0 -Type DWord
    Set-ItemProperty -Path $au1 -Name "ScheduledInstallDay" -Value 7 -Type DWord
    Set-ItemProperty -Path $au1 -Name "ScheduledInstallTime" -Value 0 -Type DWord
    Set-ItemProperty -Path $au1 -Name "ScheduledInstallFourthWeek" -Value 1 -Type DWord
    Set-ItemProperty -Path $au1 -Name "AllowMUUpdateService" -Value 0 -Type DWord

    # CacheSet002
    $base2 = "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UpdatePolicy\GPCache\CacheSet002\WindowsUpdate"
    $au2 = "$base2\AU"
    New-Item -Path $base2 -Force | Out-Null
    New-Item -Path $au2 -Force | Out-Null

    Set-ItemProperty -Path $base2 -Name "ExcludeWUDriversInQualityUpdate" -Value 1 -Type DWord
    Set-ItemProperty -Path $base2 -Name "AllowAutoWindowsUpdateDownloadOverMeteredNetwork" -Value 0 -Type DWord
    Set-ItemProperty -Path $base2 -Name "ManagePreviewBuildsPolicyValue" -Value 0 -Type DWord
    Set-ItemProperty -Path $base2 -Name "AUPowerManagement" -Value 0 -Type DWord
    Set-ItemProperty -Path $base2 -Name "ElevateNonAdmins" -Value 0 -Type DWord
    Set-ItemProperty -Path $base2 -Name "SetAllowOptionalContent" -Value 0 -Type DWord
    Set-ItemProperty -Path $base2 -Name "SetAutoRestartNotificationDisable" -Value 1 -Type DWord
    Set-ItemProperty -Path $base2 -Name "AllowOptionalContent" -Value 0 -Type DWord
    Set-ItemProperty -Path $base2 -Name "DisableWUfBSafeguards" -Value 0 -Type DWord
    Set-ItemProperty -Path $base2 -Name "SetUpdateNotificationLevel" -Value 1 -Type DWord
    Set-ItemProperty -Path $base2 -Name "UpdateNotificationLevel" -Value 2 -Type DWord
    Set-ItemProperty -Path $base2 -Name "TargetReleaseVersion" -Value 0 -Type DWord

    Set-ItemProperty -Path $au2 -Name "NoAUAsDefaultShutdownOption" -Value 1 -Type DWord
    Set-ItemProperty -Path $au2 -Name "NoAUShutdownOption" -Value 1 -Type DWord
    Set-ItemProperty -Path $au2 -Name "AlwaysAutoRebootAtScheduledTime" -Value 0 -Type DWord
    Set-ItemProperty -Path $au2 -Name "AutoInstallMinorUpdates" -Value 0 -Type DWord
    Set-ItemProperty -Path $au2 -Name "NoAutoRebootWithLoggedOnUsers" -Value 1 -Type DWord
    Set-ItemProperty -Path $au2 -Name "NoAutoUpdate" -Value 1 -Type DWord
    Set-ItemProperty -Path $au2 -Name "AUOptions" -Value 1 -Type DWord
    Set-ItemProperty -Path $au2 -Name "AutomaticMaintenanceEnabled" -Value 0 -Type DWord
    Set-ItemProperty -Path $au2 -Name "ScheduledInstallDay" -Value 7 -Type DWord
    Set-ItemProperty -Path $au2 -Name "ScheduledInstallTime" -Value 0 -Type DWord
    Set-ItemProperty -Path $au2 -Name "ScheduledInstallFourthWeek" -Value 1 -Type DWord
    Set-ItemProperty -Path $au2 -Name "AllowMUUpdateService" -Value 0 -Type DWord

    # PolicyState
    $policyState = "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UpdatePolicy\PolicyState"
    New-Item -Path $policyState -Force | Out-Null
    Set-ItemProperty -Path $policyState -Name "BranchReadinessLevel" -Value "CB" -Type String
    Set-ItemProperty -Path $policyState -Name "ExcludeWUDrivers" -Value 1 -Type DWord

    # UX\RebootDowntime
    $rebootDT = "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\RebootDowntime"
    New-Item -Path $rebootDT -Force | Out-Null
    Set-ItemProperty -Path $rebootDT -Name "FirstLogonAfterUpdateFlag" -Value 0 -Type DWord

    # UX\Settings
    $uxSettings = "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings"
    New-Item -Path $uxSettings -Force | Out-Null
    Set-ItemProperty -Path $uxSettings -Name "PauseFeatureUpdatesStartTime" -Value "2000-01-01T00:00:00Z" -Type String
    Set-ItemProperty -Path $uxSettings -Name "PauseFeatureUpdatesEndTime" -Value "3000-12-30T23:59:59Z" -Type String
    Set-ItemProperty -Path $uxSettings -Name "PauseQualityUpdatesStartTime" -Value "2000-01-01T00:00:00Z" -Type String
    Set-ItemProperty -Path $uxSettings -Name "PauseQualityUpdatesEndTime" -Value "3000-12-30T23:59:59Z" -Type String
    Set-ItemProperty -Path $uxSettings -Name "PauseUpdatesStartTime" -Value "2000-01-01T00:00:00Z" -Type String
    Set-ItemProperty -Path $uxSettings -Name "PauseUpdatesExpiryTime" -Value "3000-12-30T23:59:59Z" -Type String
    Set-ItemProperty -Path $uxSettings -Name "ActiveHoursStart" -Value 7 -Type DWord
    Set-ItemProperty -Path $uxSettings -Name "ActiveHoursEnd" -Value 20 -Type DWord
    Set-ItemProperty -Path $uxSettings -Name "AllowAutoWindowsUpdateDownloadOverMeteredNetwork" -Value 0 -Type DWord
    Set-ItemProperty -Path $uxSettings -Name "ExcludeWUDriversInQualityUpdate" -Value 0 -Type DWord
    Set-ItemProperty -Path $uxSettings -Name "SmartActiveHoursState" -Value 0 -Type DWord
    Set-ItemProperty -Path $uxSettings -Name "SmartActiveHoursSuggestionState" -Value 0 -Type DWord
    Set-ItemProperty -Path $uxSettings -Name "UserChoiceActiveHoursStart" -Value 7 -Type DWord
    Set-ItemProperty -Path $uxSettings -Name "UserChoiceActiveHoursEnd" -Value 20 -Type DWord
    Set-ItemProperty -Path $uxSettings -Name "FlightSettingsMaxPauseDays" -Value 17504 -Type DWord
    Set-ItemProperty -Path $uxSettings -Name "RestartNotificationsAllowed" -Value 0 -Type DWord
    Set-ItemProperty -Path $uxSettings -Name "RestartNotificationsAllowed2" -Value 0 -Type DWord
    Set-ItemProperty -Path $uxSettings -Name "IsContinuousInnovationOptedIn" -Value 0 -Type DWord

    # Policies\WindowsUpdate
    $polWU = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
    $polAU = "$polWU\AU"
    New-Item -Path $polWU -Force | Out-Null
    New-Item -Path $polAU -Force | Out-Null

    Set-ItemProperty -Path $polWU -Name "ExcludeWUDriversInQualityUpdate" -Value 1 -Type DWord
    Set-ItemProperty -Path $polWU -Name "AllowAutoWindowsUpdateDownloadOverMeteredNetwork" -Value 0 -Type DWord
    Set-ItemProperty -Path $polWU -Name "ManagePreviewBuildsPolicyValue" -Value 0 -Type DWord
    Set-ItemProperty -Path $polWU -Name "AUPowerManagement" -Value 0 -Type DWord
    Set-ItemProperty -Path $polWU -Name "ElevateNonAdmins" -Value 0 -Type DWord
    Set-ItemProperty -Path $polWU -Name "SetAllowOptionalContent" -Value 0 -Type DWord
    Set-ItemProperty -Path $polWU -Name "SetAutoRestartNotificationDisable" -Value 1 -Type DWord
    Set-ItemProperty -Path $polWU -Name "SetUpdateNotificationLevel" -Value 1 -Type DWord
    Set-ItemProperty -Path $polWU -Name "UpdateNotificationLevel" -Value 2 -Type DWord
    Set-ItemProperty -Path $polWU -Name "AllowOptionalContent" -Value 3 -Type DWord

    Set-ItemProperty -Path $polAU -Name "NoAUAsDefaultShutdownOption" -Value 1 -Type DWord
    Set-ItemProperty -Path $polAU -Name "NoAUShutdownOption" -Value 1 -Type DWord
    Set-ItemProperty -Path $polAU -Name "AlwaysAutoRebootAtScheduledTime" -Value 0 -Type DWord
    Set-ItemProperty -Path $polAU -Name "AutoInstallMinorUpdates" -Value 0 -Type DWord
    Set-ItemProperty -Path $polAU -Name "NoAutoRebootWithLoggedOnUsers" -Value 1 -Type DWord
    Set-ItemProperty -Path $polAU -Name "NoAutoUpdate" -Value 1 -Type DWord
    Set-ItemProperty -Path $polAU -Name "AUOptions" -Value 1 -Type DWord
    Set-ItemProperty -Path $polAU -Name "AutomaticMaintenanceEnabled" -Value 0 -Type DWord
    Set-ItemProperty -Path $polAU -Name "ScheduledInstallDay" -Value 7 -Type DWord
    Set-ItemProperty -Path $polAU -Name "ScheduledInstallTime" -Value 0 -Type DWord
    Set-ItemProperty -Path $polAU -Name "ScheduledInstallFourthWeek" -Value 1 -Type DWord
    Set-ItemProperty -Path $polAU -Name "AllowMUUpdateService" -Value 0 -Type DWord
    gpupdate.exe /force
    Write-Host " + Windows Update berhasil dipause sampai 31 Desember 3000..." -ForegroundColor Green
}


function UnpauseWindowsUpdate {
    Write-Host " + Menghapus pengaturan Windows Pause Update..." -ForegroundColor Yellow

    # UpdatePolicy\PolicyState
    $policyState = "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UpdatePolicy\PolicyState"
    if (Test-Path $policyState) {
        Set-ItemProperty -Path $policyState -Name "TargetReleaseVersion" -Value 0 -Type DWord
    }

    # UpdatePolicy\Settings
    $updateSettings = "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UpdatePolicy\Settings"
    if (Test-Path $updateSettings) {
        Set-ItemProperty -Path $updateSettings -Name "PausedFeatureStatus" -Value 0 -Type DWord
        Set-ItemProperty -Path $updateSettings -Name "PausedQualityStatus" -Value 0 -Type DWord
        Remove-ItemProperty -Path $updateSettings -Name "PausedQualityDate" -ErrorAction SilentlyContinue
        Remove-ItemProperty -Path $updateSettings -Name "PausedFeatureDate" -ErrorAction SilentlyContinue
    }

    # UX\Settings
    $uxSettings = "HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings"
    if (Test-Path $uxSettings) {
        Remove-ItemProperty -Path $uxSettings -Name "PauseFeatureUpdatesStartTime" -ErrorAction SilentlyContinue
        Remove-ItemProperty -Path $uxSettings -Name "PauseFeatureUpdatesEndTime" -ErrorAction SilentlyContinue
        Remove-ItemProperty -Path $uxSettings -Name "PauseQualityUpdatesStartTime" -ErrorAction SilentlyContinue
        Remove-ItemProperty -Path $uxSettings -Name "PauseQualityUpdatesEndTime" -ErrorAction SilentlyContinue
        Remove-ItemProperty -Path $uxSettings -Name "PauseUpdatesStartTime" -ErrorAction SilentlyContinue
        Remove-ItemProperty -Path $uxSettings -Name "PauseUpdatesExpiryTime" -ErrorAction SilentlyContinue
    }

    # Policies\WindowsUpdate
    $policyWU = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
    if (Test-Path $policyWU) {
        Set-ItemProperty -Path $policyWU -Name "TargetReleaseVersion" -Value 0 -Type DWord
    }
    gpupdate.exe /force
    Write-Host " +  Windows Pause Update berhasil dinonaktifkan." -ForegroundColor Green
}


function Stop-ServiceWithStatus {
    param ([string]$ServiceName)
    Write-Host "Menghentikan Services Windows Update yang terkait..." -ForegroundColor Yellow
    if (Get-Service $ServiceName -ErrorAction SilentlyContinue) {
        Stop-Service $ServiceName -Force -ErrorAction SilentlyContinue
        Start-Sleep -Seconds 1
        if ((Get-Service $ServiceName).Status -eq "Stopped") {
            Write-Host " + Berhasil menghentikan $ServiceName." -ForegroundColor Green
        } else {
            Write-Host " X Gagal menghentikan $ServiceName." -ForegroundColor Red
        }
    } else {
        Write-Host "Layanan $ServiceName tidak ditemukan." -ForegroundColor Cyan
    }
}

function ResetWindowsUpdate {

    Write-Host "=== MEMPERBAIKI WINDOWS UPDATE ===" -ForegroundColor Cyan

    # Hentikan layanan Windows Update yang terkait
    $services = @("wuauserv", "cryptSvc", "bits", "msiserver", "TrustedInstaller")
    foreach ($service in $services) {
        Stop-ServiceWithStatus -ServiceName $service
    }

    # Path folder SoftwareDistribution
    $updateFolder = "C:\Windows\SoftwareDistribution"
    $renamedFolder = "C:\Windows\SoftwareDistribution.old"

    if (Test-Path $updateFolder) {
        try {
            Write-Host "Mengambil kepemilikan folder..." -ForegroundColor Yellow
            takeown /F $updateFolder /R /D Y | Out-Null
            icacls $updateFolder /grant Administrators:F /T | Out-Null

            Write-Host "Menghapus folder SoftwareDistribution..." -ForegroundColor Yellow
            Remove-Item -Path $updateFolder -Recurse -Force -ErrorAction Stop
            Write-Host "Folder SoftwareDistribution berhasil dihapus." -ForegroundColor Green
        } catch {
            Write-Host "Gagal menghapus folder. Mencoba rename..." -ForegroundColor Red
            if (Test-Path $renamedFolder) {
                Remove-Item -Path $renamedFolder -Recurse -Force -ErrorAction SilentlyContinue
            }
            Rename-Item -Path $updateFolder -NewName "SoftwareDistribution.old" -Force
            Write-Host "Folder berhasil di-rename menjadi SoftwareDistribution.old." -ForegroundColor Green
        }
    } else {
        Write-Host "Folder SoftwareDistribution tidak ditemukan atau sudah dihapus." -ForegroundColor Cyan
    }


    # Menghapus folder catroot2
    Write-Host "`nMenghapus folder catroot2..." -ForegroundColor Yellow
    $catrootFolder = "C:\Windows\System32\catroot2"
    if (Test-Path $catrootFolder) {
        Remove-Item -Path $catrootFolder -Recurse -Force
        Write-Host "Folder catroot2 berhasil dihapus." -ForegroundColor Green
    } else {
        Write-Host "Folder catroot2 tidak ditemukan atau sudah dihapus." -ForegroundColor Cyan
    }
    Start-Sleep -Seconds 3
    # Daftarkan ulang file DLL yang terkait dengan Windows Update
    Write-Host "`nMendaftarkan ulang komponen Windows Update..." -ForegroundColor Yellow
    $updateDlls = @(
        "atl.dll", "urlmon.dll", "mshtml.dll", "shdocvw.dll", "browseui.dll",
        "jscript.dll", "vbscript.dll", "scrrun.dll", "msxml.dll", "msxml3.dll",
        "msxml6.dll", "actxprxy.dll", "softpub.dll", "wintrust.dll", "dssenh.dll",
        "rsaenh.dll", "gpkcsp.dll", "sccbase.dll", "slbcsp.dll", "cryptdlg.dll",
        "oleaut32.dll", "ole32.dll", "shell32.dll", "initpki.dll", "wuapi.dll",
        "wuaueng.dll", "wuaueng1.dll", "wucltui.dll", "wups.dll", "wups2.dll",
        "wuweb.dll", "qmgr.dll", "qmgrprxy.dll", "wucltux.dll", "muweb.dll",
        "wuwebv.dll"
    )

    foreach ($dll in $updateDlls) {
        $dllPath = "C:\Windows\System32\$dll"
        if (Test-Path $dllPath) {
            regsvr32.exe /s $dllPath
            Write-Host "Berhasil mendaftarkan ulang $dll" -ForegroundColor Green
        } else {
            Write-Host "DLL tidak ditemukan: $dll" -ForegroundColor Red
        }
    }

    # Reset Winsock
    Write-Host "`nMereset Winsock..." -ForegroundColor Yellow
    netsh winsock reset
    Write-Host "Winsock berhasil direset." -ForegroundColor Green

    # Memulai kembali layanan Windows Update
    Write-Host "`nMemulai kembali layanan Windows Update..." -ForegroundColor Yellow
    foreach ($service in $services) {
        Start-Service $service
        Start-Sleep -Seconds 1
        if ((Get-Service $service).Status -eq "Running") {
            Write-Host " + Layanan $service berhasil dimulai." -ForegroundColor Green
        } else {
            Write-Host " X Gagal memulai layanan $service." -ForegroundColor Red
        }
    }

    # Periksa status layanan Windows Update
    Write-Host "`nMemeriksa status layanan Windows Update..." -ForegroundColor Yellow
    Get-Service wuauserv, cryptSvc, bits, msiserver, TrustedInstaller  | Format-Table -AutoSize

    Write-Host "`nProses selesai. Silakan restart windows lalu jalankan kembali windows update." -ForegroundColor Cyan
}

function Show-Menu {
    [Console]::OutputEncoding = [System.Text.Encoding]::utf8
    Clear-Host
    # ASCII Art dalam Unicode [char]
    $text = @"

                                                  $([char]0x2554)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2557)
         $([char]0x2554)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2567)$([char]0x2563) ISTANA BEC LANTAI 1 BLOK D7 $([char]0x2551)
         $([char]0x2551)                                        $([char]0x255A)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2563)
         $([char]0x2551)   $([char]0x2588)$([char]0x2588)                                $([char]0x2588)$([char]0x2588)                               $([char]0x2551)
         $([char]0x2551)   $([char]0x2591)$([char]0x2591) $([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2592)$([char]0x2592) $([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2584)$([char]0x2580) $([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)      $([char]0x2591)$([char]0x2591) $([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)     $([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)   $([char]0x2551)
         $([char]0x2551)   $([char]0x2588)$([char]0x2588)       $([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)    $([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)   $([char]0x2588)$([char]0x2588)      $([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)    $([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)     $([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)    $([char]0x2588)$([char]0x2588)   $([char]0x2551)
         $([char]0x2551)   $([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)    $([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)    $([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)   $([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)   $([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588) $([char]0x2580)$([char]0x2588)$([char]0x2588)   $([char]0x2588)$([char]0x2588)$([char]0x2580) $([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)   $([char]0x2551)
         $([char]0x2551)   $([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)    $([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2580)$([char]0x2584) $([char]0x2592)$([char]0x2592)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588)$([char]0x2588) $([char]0x2588)$([char]0x2588)    $([char]0x2588)$([char]0x2588)    $([char]0x2580)$([char]0x2588)$([char]0x2580)    $([char]0x2588)$([char]0x2588)    $([char]0x2588)$([char]0x2588)   $([char]0x2551)
         $([char]0x2551)                                                                      $([char]0x2551)
         $([char]0x255A)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2550)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x2564)$([char]0x255D)
                          ----- Windows Update Control Menu -----
"@

    Write-Host $text -ForegroundColor Cyan

    Write-Host
    Write-Host "------------------------------------------------------------------------------------------" 
    Write-Host "   SERVICE - SPAREPART - UPGRADE - MAINTENANCE - INSTALL ULANG - JUAL - TROUBLESHOOTING   " -ForegroundColor Red
    Write-Host "------------------------------------------------------------------------------------------"
    Write-Host
    Write-Host " 1. Pause Windows Update"
    Write-Host " 2. UnPause Windows Update"
    Write-Host " 3. Reset Windows Update"
    Write-Host " 0. Exit"
    Write-Host  
    Write-Host "------------------------------------------------------------------------------------------"

    $choice = Read-Host "Pilih opsi [1/2/3/0] lalu ENTER"
    switch ($choice) {
        '1' { PauseWindowsUpdate }
        '2' { UnpauseWindowsUpdate }
        '3' { ResetWindowsUpdate }
        '0' { Write-Host "Keluar..." -ForegroundColor Gray; exit }
        default {
            Write-Host "Pilihan tidak valid. Silakan coba lagi." -ForegroundColor Red
        }
    }
    Pause
    Show-Menu
}

Show-Menu
