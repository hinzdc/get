param([switch]$Elevated)

function Test-Admin {
    $currentUser = New-Object Security.Principal.WindowsPrincipal $([Security.Principal.WindowsIdentity]::GetCurrent())
    return $currentUser.IsInRole([Security.Principal.WindowsBuiltinRole]::Administrator)
}

if (-not (Test-Admin)) {
    if ($Elevated) {
        Write-Host "Failed to elevate privileges. Aborting." -ForegroundColor Red
        exit
    } else {
        Start-Process powershell.exe -Verb RunAs -ArgumentList ('-noprofile -noexit -file "{0}" -Elevated' -f ($myInvocation.MyCommand.Definition))
        exit
    }
}

Add-Type -AssemblyName System.Windows.Forms

function Show-Menu {
    Clear-Host
    Write-Host ""
    Write-Host "                             " -BackgroundColor DarkRed
    Write-Host " FORCE REMOVE FILE OR FOLDER " -BackgroundColor DarkRed -ForegroundColor White
    Write-Host "          HINZDC.XYZ         " -BackgroundColor DarkRed -ForegroundColor White
    Write-Host "                             " -BackgroundColor DarkRed
    Write-Host "-----------------------------------------"
    Write-Host ""
    Write-Host " [1] Force Remove File"
    Write-Host " [2] Force Remove Folder"
    Write-Host " [3] Exit"
    Write-Host " [0] Clear Temp Folders"
    Write-Host ""
    Write-Host "-----------------------------------------"
}

function Remove-File {
    $fileDialog = New-Object System.Windows.Forms.OpenFileDialog
    $fileDialog.Title = "Select the file to remove"
    $fileDialog.InitialDirectory = [System.IO.Directory]::GetCurrentDirectory()

    if ($fileDialog.ShowDialog() -eq [System.Windows.Forms.DialogResult]::OK) {
        $path = $fileDialog.FileName
        if (Test-Path $path -PathType Leaf) {
            $confirm = Read-Host "Are you sure you want to delete the file $path? (Y/N)"
            if ($confirm -eq "Y") {
                Write-Host " PLEASE WAIT.. " -ForegroundColor Yellow
                Remove-Item -Path $path -Force
                Write-Host "File successfully deleted." -ForegroundColor Green
            }
        } else {
            Write-Host "File $path not found." -ForegroundColor Red
        }
    }
}

function Remove-Folder {
    $folderDialog = New-Object System.Windows.Forms.FolderBrowserDialog
    $folderDialog.Description = "Select the folder to remove"

    if ($folderDialog.ShowDialog() -eq [System.Windows.Forms.DialogResult]::OK) {
        $path = $folderDialog.SelectedPath
        if (Test-Path $path -PathType Container) {
            $confirm = Read-Host "Are you sure you want to delete the folder $path and its contents? (Y/N)"
            if ($confirm -eq "Y") {
                Write-Host " PLEASE WAIT.. " -ForegroundColor Yellow
                Remove-Item -Path $path -Recurse -Force
                Write-Host "Folder and its contents successfully deleted." -ForegroundColor Green
            }
        } else {
            Write-Host "Folder $path not found." -ForegroundColor Red
        }
    }
}

function Clear-TempFolders {
    Remove-Item -Path "C:\Windows\Temp" -Recurse -Force
    Remove-Item -Path "$env:USERPROFILE\AppData\Local\Temp" -Recurse -Force
    Write-Host "Temporary folders cleared." -ForegroundColor Green
}

Show-Menu
$choice = Read-Host "Enter your choice (1/2/3/0)"

switch ($choice) {
    "1" { Remove-File }
    "2" { Remove-Folder }
    "3" { exit }
    "0" { Clear-TempFolders }
    default { Write-Host "Invalid choice. Please enter 1, 2, 3, or 0." -ForegroundColor Red }
}
